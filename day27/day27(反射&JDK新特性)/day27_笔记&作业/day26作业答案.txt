用自己的语言描述下列问题,要尽量详细,不要过于依赖笔记，自己能想到的也算

1,网络三要素
IP:
	* 每个设备在网络中的唯一标识
	* 每台网络终端在网络中都有一个独立的地址，我们在网络中传输数据就是使用这个地址。 
	* ipconfig：查看本机IP192.168.12.42
	* ping：测试连接192.168.40.62
	* 本地回路地址：127.0.0.1 255.255.255.255是广播地址
	* IPv4：4个字节组成，4个0-255。大概42亿，30亿都在北美，亚洲4亿。2011年初已经用尽。 
	* IPv6：8组，每组4个16进制数。
端口:
	* 每个程序在设备上的唯一标识
	* 每个网络程序都需要绑定一个端口号，传输数据的时候除了确定发到哪台机器上，还要明确发到哪个程序。
	* 端口号范围从0-65535
	* 编写网络应用就需要绑定一个端口号，尽量使用1024以上的，1024以下的基本上都被系统程序占用了。
	* 常用端口
		* mysql: 3306
		* oracle: 1521
		* web: 80
		* tomcat: 8080
		* QQ: 4000
		* feiQ: 2425
协议:(udp和tcp的区别)
	* 为计算机网络中进行数据交换而建立的规则、标准或约定的集合。
	* UDP
		* 面向无连接，数据不安全，速度快。不区分客户端与服务端。
	* TCP
	　　* 面向连接（三次握手），数据安全，速度略低。分为客户端和服务端。
		* 三次握手: 客户端先向服务端发起请求, 服务端响应请求, 传输数据
2,udp和tcp的传输过程
	udp传输过程
	* a.发送Send
		* 创建DatagramSocket, 随机端口号
		* 创建DatagramPacket, 指定数据, 长度, 地址, 端口
		* 使用DatagramSocket发送DatagramPacket
		* 关闭DatagramSocket
	* b.接收Receive
		* 创建DatagramSocket, 指定端口号
		* 创建DatagramPacket, 指定数组, 长度
		* 使用DatagramSocket接收DatagramPacket
		* 关闭DatagramSocket
		* 从DatagramPacket中获取数据
	* c.接收方获取ip和端口号
		* String ip = packet.getAddress().getHostAddress();
		* int port = packet.getPort();

	tcp的传输过程
	* a.客户端
		* 创建Socket连接服务端(指定ip地址,端口号)通过ip地址找对应的服务器
		* 调用Socket的getInputStream()和getOutputStream()方法获取和服务端相连的IO流
		* 输入流可以读取服务端输出流写出的数据
		* 输出流可以写出数据到服务端的输入流
	* b.服务端
		* 创建ServerSocket(需要指定端口号)
		* 调用ServerSocket的accept()方法接收一个客户端请求，得到一个Socket
		* 调用Socket的getInputStream()和getOutputStream()方法获取和客户端相连的IO流
		* 输入流可以读取客户端输出流写出的数据
		* 输出流可以写出数据到客户端的输入流

