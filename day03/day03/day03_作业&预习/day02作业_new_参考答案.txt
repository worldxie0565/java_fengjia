1.什么是变量?变量的定义格式?要使用变量需要注意什么?
	答：略

2.Java中的数据类型分几类?基本数据类型有哪些?
	答：略

3.数据类型转换：
	隐式转换：
	强制转换：


	面试题：
		第一题：
		byte b1=3,b2=4,b;
		b=b1+b2;
		b=3+4;
		哪句是编译失败的呢？为什么呢？
			答：b=b1+b2; 编译失败，因为b1和b2 为byte类型，而byte类型的数据参加运算时要先转成int类型，
				所以b1+b2的结果为int类型，把int类型的数据赋值给b，但是b是byte类型，就会出现损失精度，所以编译报错。
				b=3+4;3和4都是int类型的常量，java虚拟机有常量优先处理机制，在编译时就能确定3+4的结果为7，
				然后把7赋值给byte类型的b，7正好在byte的数据范围内，所以会有一个隐式类型转换，可以赋值成果。 

		第二题：
		byte  by = 130;有没有问题?有问题如何解决?结果是多少呢?
			答：有问题，虽然130是int类型的常量，但是已经超出了byte类型的范围(-128-127)，所以将130赋值给by会出现损失精度，java不允许。
				解决方案：将130进行强制类型转换，by = (byte)130;  结果为：-126
				原因：130的补码： 0000 0000 0000 0000 0000 0000 1000 0010
				强制转换成byte类型相当于把前24位给删掉了，剩下八位，但注意这里剩下的八位为补码：1000 0010
				1000 0010(补码)—> 1111 1110(源码)->-126(十进制)
		第三题:
		byte b = 10;
		b++;
		b = b + 1;
		哪句是编译失败的呢？为什么呢？
			答：b++;编译不会报错，虽然b++相当于b = b+1;但是在b+1的前面有个强制类型转换(byte)(b+1),所以不会报错
				b=b+1;编译报错，b为byte类型，参加运算时提升为int类型，int类型赋值给byte类型的b，会损失进度，所以不允许。
4.常见的算术运算符有哪些?
	(1)+运算符的作用有哪些?
		答：略
	(2)除法和取余的区别?
		答：略
	(3)++和--的使用规则?
		答：略

5.常见的赋值运算符有哪些?
	(1)+=运算的作用是什么?
		答：略
	(2)扩展的赋值运算符有什么特点?
		答：略

6. short s = 1; s = s + 1;有没有问题?如果有怎么解决?
	答：有问题，和上面的相同，需要类型的强制转换  s = (short)(s+1);
   short s = 1; s += 1;有没有问题?如果有怎么解决?
	答：没问题，s += 1;相当于 s = (short)(s+1);
	
7.分析以下需求，并用代码实现：
	(1)已知一个三位数，请分别获取该三位数上每一位的数值
	(2)例如：123的个位、十位、百位，分别是3、2、1
	(3)打印格式"数字123的个位是 3, 十位是 2, 百位是 1"
	答：以下代码进攻参考
		public class Test {
			public static void main(String[] args) {
				//1.定义int类型的变量i值为123
				int i = 123;
				//2.求出个位数字
				int ge = i%10;
				//3.求出十位数字
				int shi = i/10%10;
				//4.求出百位数字
				int bai = i/100;
				//5.按照格式打印
				System.out.println("数字"+i+"的个位是 "+ge+", 十位是 "+shi+", 百位是 "+bai);			
			}
		}
	

8.看程序说结果，请不要提前运行？
	public class Test1 {
		public static void main(String[] args) {
			 int x = 4;
			 int y = (--x)+(x--)+(x*10);
			 System.out.println("x = " + x + ",y = " + y);
		}
	}
	答：(--x)+(x--)+(x*10);//3+3+2*10 = 26, x = 2
		(--x)+(x--)+(x*10):此表达式从左向右运算，先算(--x)因为--在前面所以先做--运算此时x的值为3，
							接着计算(x--)，经过上一步x已经变成了3，所以计算x--之前x的值为3，因为--在后面所以先使用x的值作为x--表达式的值(3),之后再进行--运算x变成2，
							最后计算x*10的表达式的值，经过前面的运算x已经变成了2
							所以最终变为了3+3+2*10 = 26 ，x的值为2


	